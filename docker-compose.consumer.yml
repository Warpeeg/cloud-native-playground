version: '3.1'

services:

    #################################################################
    # Consumer Web #
    #################################################################

    consumer-web:
        build: ./consumer/consumer-web
        image: consumer-web
        #container_name: consumer-web
        restart: always
        ports:
            #- '4000:8080'
            - '8080'
        networks:
            - ppnet
        depends_on:
            #- kubemq
            - kafka1

    #################################################################
    # Kong #
    #################################################################

    kong:
        build: ./consumer/kong
        container_name: kong
        volumes:
            - ./consumer/kong/kong.yml:/usr/local/kong/declarative/kong.yml
        environment:
            KONG_DATABASE: "off"
            KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
            KONG_PROXY_ACCESS_LOG: /dev/stdout
            KONG_ADMIN_ACCESS_LOG: /dev/stdout
            KONG_PROXY_ERROR_LOG: /dev/stderr
            KONG_ADMIN_ERROR_LOG: /dev/stderr
            KONG_ADMIN_LISTEN: 0.0.0.0:8001
        ports:
            - 8000:8000
            - 8001:8001
            - 8443:8443
            - 8444:8444
        healthcheck:
            test: kong health
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - ppnet

    #################################################################################
    # Konga
    # note: when running and asked for a connection to kong use: http://kong:8001
    #################################################################################

    konga:
        build: ./consumer/konga
        container_name: konga
        depends_on:
            - konga-database
            #    condition: service_healthy
        volumes:
            - ./consumer/konga/user_seed.js:/app/user_seed.js:ro
        ports:
            - 1337:1337
        environment:
            DB_ADAPTER: mongo
            DB_DATABASE: konga
            DB_HOST: konga-database
            KONGA_SEED_USER_DATA_SOURCE_FILE: /app/user_seed.js
            NODE_ENV: production
        restart: on-failure
        networks:
            - ppnet

    konga-database:
        image: mongo:4.1.5
        container_name: konga-database
        volumes:
            - konga_data:/data/db
        ports:
            - 27017:27017
        healthcheck:
            test: echo 'db.stats().ok' | mongo localhost:27017/konga --quiet
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - ppnet

volumes:
    konga_data: